// src/app/add-product/page.tsx
'use client'
import { useState } from 'react'
import Link from 'next/link'

// Friss√≠tett kateg√≥ri√°k
const categories = [
  { 
    id: 'perishable', 
    name: 'Romland√≥ term√©kek', 
    icon: 'ü•¨',
    emojis: [
      // Gy√ºm√∂lcs
      'üçé', 'üçä', 'üçå', 'üçá', 'üçì', 'üçí', 'ü•ù', 'üçë', 'üçç', 'ü•≠', 'üçâ', 'ü´ê', 'ü••',
      // Z√∂lds√©g  
      'ü•ï', 'ü•í', 'üçÖ', 'ü•¨', 'ü•¶', 'üå∂Ô∏è', 'ü´í', 'üåΩ', 'ü•î', 'üßÑ', 'üßÖ', 'ü•ë', 'üçÜ', 'ü´ë',
      // Toj√°s
      'ü•ö', 'üê£',
      // H√∫s
      'ü•©', 'üçñ', 'üêî', 'üêÑ', 'üê∑', 'ü¶Ü', 'üêü', 'ü¶ê', 'ü¶Ä',
      // Tejterm√©k
      'ü•õ', 'üßÄ', 'üßà', 'üç≥', 'ü•Ø'
    ]
  },
  { 
    id: 'preserved', 
    name: 'Tart√≥s term√©kek', 
    icon: 'üçØ',
    emojis: [
      // Lekv√°r
      'üçØ', 'ü´ô', 'üçì', 'üçë', 'üçá', 'üçä', 'üçã', 'ü•ù',
      // Sz√∂rp
      'üßÉ', 'üçπ', 'ü•§', 'üçã', 'üçì', 'üçë',
      // M√©z
      'üçØ', 'üêù', 'üåª', 'üåº',
      // Tea
      'üåø', 'üçÉ', 'üå±', 'üåº', 'üå∏', '‚òï', 'ü´ñ',
      // Gy√≥gyn√∂v√©ny
      'üåø', 'üçÉ', 'üå±', 'üßÑ', 'üßÖ', 'üå∂Ô∏è',
      // F√ºst√∂lt√°ru
      'ü•ì', 'üå≠', 'üçñ', 'üêü', 'üßÄ'
    ]
  },
  { 
    id: 'cosmetics', 
    name: 'H√°zi kozmetikum', 
    icon: 'üßº',
    emojis: ['üßº', 'üß¥', 'üåø', 'üíÜ‚Äç‚ôÄÔ∏è', 'üõÅ', 'üïØÔ∏è', 'üßΩ', 'üå∏', 'üåπ', 'ü••']
  },
  { 
    id: 'rural_marketplace', 
    name: 'Falusi marketplace', 
    icon: 'üêÑ',
    emojis: [
      // √âl≈ë √°llat
      'üêÑ', 'üê∑', 'üêî', 'üêë', 'üêê', 'ü¶Ü', 'üê∞', 'üê¥', 'üêà', 'üêï',
      // Gabona
      'üåæ', 'üåΩ', 'ü´ò', 'ü•ú', 'üå∞',
      // Eszk√∂z√∂k
      'üõ†Ô∏è', '‚öíÔ∏è', 'ü™ì', 'üî®', '‚õèÔ∏è', 'ü™ö', 'üß∞', 'üì¶', 'üöú', 'üîß'
    ]
  },
  { 
    id: 'bakery', 
    name: 'P√©k√°ruk', 
    icon: 'üçû',
    emojis: ['üçû', 'ü•ñ', 'ü•®', 'üßá', 'üç∞', 'üéÇ', 'ü•ß', 'üßÅ', 'üç™', 'ü•ê']
  }
]

// Alkateg√≥ri√°k
const getSubcategories = (categoryId: string) => {
  const subcategoryMap = {
    'perishable': ['Gy√ºm√∂lcs', 'Z√∂lds√©g', 'Toj√°s', 'H√∫s', 'Tejterm√©k'],
    'preserved': ['Lekv√°r', 'Sz√∂rp', 'M√©z', 'Tea', 'Gy√≥gyn√∂v√©ny', 'F√ºst√∂lt√°ru'],
    'cosmetics': ['Szappan', 'Kr√©m', 'Balzsam', 'Olaj', 'Gyertya'],
    'rural_marketplace': ['√âl≈ë √°llat', 'Gabona', 'Eszk√∂z√∂k', 'Takarm√°ny'],
    'bakery': ['Keny√©r', 'P√©ks√ºtem√©ny', 'Torta', 'S√ºtem√©ny']
  }
  
  return subcategoryMap[categoryId as keyof typeof subcategoryMap] || []
}

// Mock felhaszn√°l√≥ adatok
const currentUser = {
  name: 'Kiss Margit',
  type: 'registered_producer',
  monthlyAds: 2,
  monthlyPushes: 1,
  activeAds: 1
}

export default function AddProductPage() {
  const [step, setStep] = useState(1)
  const [productName, setProductName] = useState('')
  const [category, setCategory] = useState('')
  const [subcategory, setSubcategory] = useState('')
  const [description, setDescription] = useState('')
  const [useImage, setUseImage] = useState('emoji')
  const [selectedEmoji, setSelectedEmoji] = useState('')
  const [uploadedImages, setUploadedImages] = useState([])
  const [price, setPrice] = useState('')
  const [unit, setUnit] = useState('kg')
  const [quantity, setQuantity] = useState('')
  const [isOrganic, setIsOrganic] = useState(false)
  const [deliveryOptions, setDeliveryOptions] = useState({
    pickup: true,
    delivery: false,
    shipping: false
  })
  const [sendPushNotification, setSendPushNotification] = useState(false)
  const [pushRadius, setPushRadius] = useState(10)

  const isLimitReached = {
    monthlyAds: currentUser.type === 'casual_seller' && currentUser.monthlyAds >= 5,
    monthlyPushes: currentUser.type === 'casual_seller' && currentUser.monthlyPushes >= 3,
    activeAds: currentUser.type === 'casual_seller' && currentUser.activeAds >= 3
  }

  const handleImageUpload = (e: any) => {
    const files = Array.from(e.target.files || [])
    setUploadedImages((prev: any) => [...prev, ...files].slice(0, 5))
  }

  const removeImage = (index: number) => {
    setUploadedImages(prev => prev.filter((_, i) => i !== index))
  }

  const handleSubmit = () => {
    console.log('Term√©k felt√∂lt√©se:', {
      productName, category, subcategory, description, useImage, selectedEmoji, 
      uploadedImages, price, unit, quantity, isOrganic, deliveryOptions,
      sendPushNotification, pushRadius
    })
    alert('Term√©k sikeresen felt√∂ltve! (Demo)')
  }

  const selectedCategoryData = categories.find(cat => cat.id === category)

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #f0fdf4 0%, #fefcf3 50%, #fff7ed 100%)'
    }}>
      
      {/* Header */}
      <div style={{
        background: 'white',
        borderBottom: '1px solid #e5e7eb',
        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
        zIndex: 40
      }}>
        <div style={{
          maxWidth: '800px',
          margin: '0 auto',
          padding: '24px 16px'
        }}>
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginBottom: '16px'
          }}>
            <div>
              <h1 style={{
                fontSize: '28px',
                fontWeight: '700',
                color: '#1f2937',
                margin: '0 0 8px 0'
              }}>
                √öj term√©k felt√∂lt√©se
              </h1>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                fontSize: '14px',
                color: '#6b7280'
              }}>
                <Link href="/" style={{ color: '#16a34a', textDecoration: 'none' }}>F≈ëoldal</Link>
                <span>‚Üí</span>
                <span>Term√©k felt√∂lt√©se</span>
              </div>
            </div>
            
            <Link
              href="/profile"
              style={{
                background: 'white',
                border: '2px solid #e5e7eb',
                borderRadius: '12px',
                padding: '8px 16px',
                fontSize: '14px',
                fontWeight: '600',
                textDecoration: 'none',
                color: '#6b7280'
              }}
            >
              ‚Üê Vissza a profilba
            </Link>
          </div>
          
          {/* Progress bar */}
          <div style={{
            display: 'flex',
            alignItems: 'center',
            gap: '8px',
            marginBottom: '8px'
          }}>
            {[1, 2, 3, 4].map((stepNum) => (
              <div key={stepNum} style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}>
                <div style={{
                  width: '32px',
                  height: '32px',
                  borderRadius: '50%',
                  background: step >= stepNum ? '#16a34a' : '#e5e7eb',
                  color: step >= stepNum ? 'white' : '#9ca3af',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontSize: '14px',
                  fontWeight: '600'
                }}>
                  {stepNum}
                </div>
                {stepNum < 4 && (
                  <div style={{
                    width: '40px',
                    height: '2px',
                    background: step > stepNum ? '#16a34a' : '#e5e7eb'
                  }}></div>
                )}
              </div>
            ))}
          </div>
          
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            fontSize: '12px',
            color: '#6b7280'
          }}>
            <span>Alapadatok</span>
            <span>K√©p/Ikon</span>
            <span>√Åraz√°s</span>
            <span>Publik√°l√°s</span>
          </div>
        </div>
      </div>

      {/* Form tartalma */}
      <div style={{
        maxWidth: '800px',
        margin: '32px auto',
        padding: '0 16px'
      }}>
        <div style={{
          background: 'white',
          borderRadius: '24px',
          padding: '32px',
          boxShadow: '0 12px 32px rgba(0, 0, 0, 0.1)',
          border: '2px solid #f8fafc'
        }}>
          
          {/* STEP 1: Alapadatok */}
          {step === 1 && (
            <div>
              <h2 style={{
                fontSize: '24px',
                fontWeight: '600',
                color: '#1f2937',
                marginBottom: '24px'
              }}>
                Term√©k alapadatok
              </h2>
              
              {/* Term√©k n√©v */}
              <div style={{ marginBottom: '24px' }}>
                <label style={{
                  display: 'block',
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#374151',
                  marginBottom: '8px'
                }}>
                  Term√©k neve *
                </label>
                <input
                  type="text"
                  value={productName}
                  onChange={(e) => setProductName(e.target.value)}
                  placeholder="pl. Friss meggy, H√°zi lekv√°r, Bio sajt..."
                  style={{
                    width: '100%',
                    padding: '16px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '12px',
                    fontSize: '16px',
                    outline: 'none',
                    boxSizing: 'border-box'
                  }}
                />
              </div>
              
              {/* Kateg√≥ria v√°laszt√°s */}
              <div style={{ marginBottom: '24px' }}>
                <label style={{
                  display: 'block',
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#374151',
                  marginBottom: '12px'
                }}>
                  Kateg√≥ria *
                </label>
                <div style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',
                  gap: '12px',
                  marginBottom: '16px'
                }}>
                  {categories.map((cat) => (
                    <button
                      key={cat.id}
                      type="button"
                      onClick={() => {
                        setCategory(cat.id)
                        setSubcategory('')
                      }}
                      style={{
                        background: category === cat.id ? '#dcfce7' : 'white',
                        border: '2px solid #e5e7eb',
                        borderColor: category === cat.id ? '#16a34a' : '#e5e7eb',
                        borderRadius: '12px',
                        padding: '16px 12px',
                        cursor: 'pointer',
                        textAlign: 'center',
                        transition: 'all 0.2s ease'
                      }}
                    >
                      <div style={{ fontSize: '24px', marginBottom: '8px' }}>
                        {cat.icon}
                      </div>
                      <div style={{
                        fontSize: '12px',
                        fontWeight: '600',
                        color: category === cat.id ? '#15803d' : '#6b7280'
                      }}>
                        {cat.name}
                      </div>
                    </button>
                  ))}
                </div>
                
                {/* Alkateg√≥ria v√°laszt√°s */}
                {category && (
                  <div>
                    <label style={{
                      display: 'block',
                      fontSize: '14px',
                      fontWeight: '600',
                      color: '#374151',
                      marginBottom: '8px'
                    }}>
                      Pontosabb kateg√≥ria (opcion√°lis)
                    </label>
                    <div style={{
                      display: 'flex',
                      gap: '8px',
                      flexWrap: 'wrap'
                    }}>
                      {getSubcategories(category).map((sub) => (
                        <button
                          key={sub}
                          type="button"
                          onClick={() => setSubcategory(subcategory === sub ? '' : sub)}
                          style={{
                            background: subcategory === sub ? '#dcfce7' : '#f8fafc',
                            color: subcategory === sub ? '#15803d' : '#6b7280',
                            border: '1px solid #e5e7eb',
                            borderColor: subcategory === sub ? '#16a34a' : '#e5e7eb',
                            borderRadius: '8px',
                            padding: '6px 12px',
                            fontSize: '12px',
                            fontWeight: '600',
                            cursor: 'pointer',
                            transition: 'all 0.2s ease'
                          }}
                        >
                          {sub}
                        </button>
                      ))}
                    </div>
                  </div>
                )}
              </div>
              
              {/* Le√≠r√°s */}
              <div style={{ marginBottom: '32px' }}>
                <label style={{
                  display: 'block',
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#374151',
                  marginBottom: '8px'
                }}>
                  Le√≠r√°s *
                </label>
                <textarea
                  value={description}
                  onChange={(e) => setDescription(e.target.value)}
                  placeholder="√çrj r√©szletesen a term√©kr≈ël: hogyan k√©sz√ºlt, milyen min≈ës√©g≈±, mire haszn√°lhat√≥..."
                  rows={4}
                  style={{
                    width: '100%',
                    padding: '16px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '12px',
                    fontSize: '16px',
                    outline: 'none',
                    boxSizing: 'border-box',
                    resize: 'vertical'
                  }}
                />
              </div>
            </div>
          )}
          
          {/* STEP 2: K√©p/Ikon v√°laszt√°s */}
          {step === 2 && (
            <div>
              <h2 style={{
                fontSize: '24px',
                fontWeight: '600',
                color: '#1f2937',
                marginBottom: '24px'
              }}>
                Term√©k k√©pe
              </h2>
              
              {/* K√©pfelt√∂lt√©s vagy emoji v√°laszt√°s */}
              <div style={{ marginBottom: '32px' }}>
                <div style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
                  gap: '16px',
                  marginBottom: '24px'
                }}>
                  
                  {/* Saj√°t k√©p felt√∂lt√©se */}
                  <div
                    onClick={() => setUseImage('photo')}
                    style={{
                      background: useImage === 'photo' ? '#dcfce7' : 'white',
                      border: '3px solid #e5e7eb',
                      borderColor: useImage === 'photo' ? '#16a34a' : '#e5e7eb',
                      borderRadius: '16px',
                      padding: '24px',
                      cursor: 'pointer',
                      textAlign: 'center',
                      transition: 'all 0.2s ease'
                    }}
                  >
                    <div style={{ fontSize: '48px', marginBottom: '16px' }}>üì∏</div>
                    <h3 style={{
                      fontSize: '18px',
                      fontWeight: '600',
                      color: '#1f2937',
                      marginBottom: '8px'
                    }}>
                      Saj√°t k√©p felt√∂lt√©se
                    </h3>
                    <p style={{
                      fontSize: '14px',
                      color: '#6b7280',
                      margin: 0
                    }}>
                      Mutasd meg a val√≥di term√©kek min≈ës√©g√©t (max 5 k√©p)
                    </p>
                  </div>
                  
                  {/* Emoji ikon v√°laszt√°s */}
                  <div
                    onClick={() => setUseImage('emoji')}
                    style={{
                      background: useImage === 'emoji' ? '#dcfce7' : 'white',
                      border: '3px solid #e5e7eb',
                      borderColor: useImage === 'emoji' ? '#16a34a' : '#e5e7eb',
                      borderRadius: '16px',
                      padding: '24px',
                      cursor: 'pointer',
                      textAlign: 'center',
                      transition: 'all 0.2s ease'
                    }}
                  >
                    <div style={{ fontSize: '48px', marginBottom: '16px' }}>üòä</div>
                    <h3 style={{
                      fontSize: '18px',
                      fontWeight: '600',
                      color: '#1f2937',
                      marginBottom: '8px'
                    }}>
                      Emoji ikon
                    </h3>
                    <p style={{
                      fontSize: '14px',
                      color: '#6b7280',
                      margin: 0
                    }}>
                      Gyors √©s egyszer≈± megold√°s
                    </p>
                  </div>
                </div>
                
                {/* K√©pfelt√∂lt√©s interface */}
                {useImage === 'photo' && (
                  <div style={{
                    border: '2px dashed #d1d5db',
                    borderRadius: '16px',
                    padding: '32px',
                    textAlign: 'center',
                    background: '#fafafa'
                  }}>
                    <input
                      type="file"
                      multiple
                      accept="image/*"
                      onChange={handleImageUpload}
                      style={{ display: 'none' }}
                      id="image-upload"
                    />
                    <label
                      htmlFor="image-upload"
                      style={{
                        cursor: 'pointer',
                        display: 'inline-block'
                      }}
                    >
                      <div style={{ fontSize: '48px', marginBottom: '16px' }}>üìÅ</div>
                      <div style={{
                        background: '#16a34a',
                        color: 'white',
                        borderRadius: '12px',
                        padding: '12px 24px',
                        fontSize: '16px',
                        fontWeight: '600',
                        display: 'inline-block'
                      }}>
                        K√©pek kiv√°laszt√°sa
                      </div>
                      <p style={{
                        fontSize: '14px',
                        color: '#6b7280',
                        marginTop: '12px'
                      }}>
                        JPG, PNG, max 5MB/k√©p, max 5 k√©p
                      </p>
                    </label>
                    
                    {/* Felt√∂lt√∂tt k√©pek el≈ën√©zete */}
                    {uploadedImages.length > 0 && (
                      <div style={{
                        display: 'grid',
                        gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',
                        gap: '12px',
                        marginTop: '24px'
                      }}>
                        {uploadedImages.map((file: any, index) => (
                          <div key={index} style={{
                            position: 'relative',
                            aspectRatio: '1',
                            background: '#e5e7eb',
                            borderRadius: '8px',
                            overflow: 'hidden'
                          }}>
                            <img
                              src={URL.createObjectURL(file)}
                              alt={`Upload ${index + 1}`}
                              style={{
                                width: '100%',
                                height: '100%',
                                objectFit: 'cover'
                              }}
                            />
                            <button
                              onClick={() => removeImage(index)}
                              style={{
                                position: 'absolute',
                                top: '4px',
                                right: '4px',
                                background: '#dc2626',
                                color: 'white',
                                border: 'none',
                                borderRadius: '50%',
                                width: '24px',
                                height: '24px',
                                cursor: 'pointer',
                                fontSize: '12px'
                              }}
                            >
                              √ó
                            </button>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                )}
                
                {/* Emoji v√°laszt√°s */}
                {useImage === 'emoji' && selectedCategoryData && (
                  <div>
                    <h4 style={{
                      fontSize: '16px',
                      fontWeight: '600',
                      color: '#374151',
                      marginBottom: '16px'
                    }}>
                      V√°lassz ikont a(z) "{selectedCategoryData.name}" kateg√≥ri√°hoz:
                    </h4>
                    <div style={{
                      display: 'grid',
                      gridTemplateColumns: 'repeat(auto-fill, minmax(60px, 1fr))',
                      gap: '12px'
                    }}>
                      {selectedCategoryData.emojis.map((emoji, index) => (
                        <button
                          key={index}
                          type="button"
                          onClick={() => setSelectedEmoji(emoji)}
                          style={{
                            background: selectedEmoji === emoji ? '#dcfce7' : 'white',
                            border: '2px solid #e5e7eb',
                            borderColor: selectedEmoji === emoji ? '#16a34a' : '#e5e7eb',
                            borderRadius: '12px',
                            padding: '16px',
                            cursor: 'pointer',
                            fontSize: '32px',
                            textAlign: 'center',
                            aspectRatio: '1'
                          }}
                        >
                          {emoji}
                        </button>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
          
          {/* STEP 3 √©s 4 ugyanaz mint kor√°bban... */}
          {step === 3 && (
            <div>
              <h2 style={{
                fontSize: '24px',
                fontWeight: '600',
                color: '#1f2937',
                marginBottom: '24px'
              }}>
                √Åraz√°s √©s r√©szletek
              </h2>
              
              {/* √År √©s m√©rt√©kegys√©g */}
              <div style={{
                display: 'grid',
                gridTemplateColumns: '2fr 1fr',
                gap: '16px',
                marginBottom: '24px'
              }}>
                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '16px',
                    fontWeight: '600',
                    color: '#374151',
                    marginBottom: '8px'
                  }}>
                    √År *
                  </label>
                  <input
                    type="number"
                    value={price}
                    onChange={(e) => setPrice(e.target.value)}
                    placeholder="800"
                    style={{
                      width: '100%',
                      padding: '16px',
                      border: '2px solid #e5e7eb',
                      borderRadius: '12px',
                      fontSize: '16px',
                      outline: 'none',
                      boxSizing: 'border-box'
                    }}
                  />
                </div>
                <div>
                  <label style={{
                    display: 'block',
                    fontSize: '16px',
                    fontWeight: '600',
                    color: '#374151',
                    marginBottom: '8px'
                  }}>
                    M√©rt√©kegys√©g
                  </label>
                  <select
                    value={unit}
                    onChange={(e) => setUnit(e.target.value)}
                    style={{
                      width: '100%',
                      padding: '16px',
                      border: '2px solid #e5e7eb',
                      borderRadius: '12px',
                      fontSize: '16px',
                      outline: 'none',
                      boxSizing: 'border-box'
                    }}
                  >
                    <option value="kg">kg</option>
                    <option value="db">db</option>
                    <option value="√ºveg">√ºveg</option>
                    <option value="csomag">csomag</option>
                    <option value="liter">liter</option>
                  </select>
                </div>
              </div>
              
              {/* Mennyis√©g */}
              <div style={{ marginBottom: '24px' }}>
                <label style={{
                  display: 'block',
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#374151',
                  marginBottom: '8px'
                }}>
                  El√©rhet≈ë mennyis√©g
                </label>
                <input
                  type="text"
                  value={quantity}
                  onChange={(e) => setQuantity(e.target.value)}
                  placeholder="pl. 15 kg el√©rhet≈ë, 10 √ºveg k√©szleten"
                  style={{
                    width: '100%',
                    padding: '16px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '12px',
                    fontSize: '16px',
                    outline: 'none',
                    boxSizing: 'border-box'
                  }}
                />
              </div>
              
              {/* Bio term√©k */}
              <div style={{ marginBottom: '24px' }}>
                <label style={{
                  display: 'flex',
                  alignItems: 'center',
                  gap: '12px',
                  cursor: 'pointer',
                  background: '#f8fafc',
                  padding: '16px',
                  borderRadius: '12px',
                  border: '2px solid #e5e7eb'
                }}>
                  <input
                    type="checkbox"
                    checked={isOrganic}
                    onChange={(e) => setIsOrganic(e.target.checked)}
                    style={{ accentColor: '#16a34a', transform: 'scale(1.2)' }}
                  />
                  <div>
                    <span style={{
                      fontSize: '16px',
                      fontWeight: '600',
                      color: '#1f2937'
                    }}>
                      üå± Bio/Vegyszermentes term√©k
                    </span>
                    <p style={{
                      fontSize: '14px',
                      color: '#6b7280',
                      margin: '4px 0 0 0'
                    }}>
                      Vegyszermentes, term√©szetes m√≥don termelt
                    </p>
                  </div>
                </label>
              </div>
              
              {/* Sz√°ll√≠t√°si opci√≥k */}
              <div style={{ marginBottom: '32px' }}>
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  color: '#374151',
                  marginBottom: '12px'
                }}>
                  Sz√°ll√≠t√°si lehet≈ës√©gek
                </h3>
                <div style={{
                  display: 'flex',
                  flexDirection: 'column',
                  gap: '12px'
                }}>
                  <label style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '12px',
                    cursor: 'pointer'
                  }}>
                    <input
                      type="checkbox"
                      checked={deliveryOptions.pickup}
                      onChange={(e) => setDeliveryOptions({
                        ...deliveryOptions,
                        pickup: e.target.checked
                      })}
                      style={{ accentColor: '#16a34a', transform: 'scale(1.2)' }}
                    />
                    <span style={{ fontSize: '16px' }}>üöö Szem√©lyes √°tv√©tel</span>
                  </label>
                  <label style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '12px',
                    cursor: 'pointer'
                  }}>
                    <input
                      type="checkbox"
                      checked={deliveryOptions.delivery}
                      onChange={(e) => setDeliveryOptions({
                        ...deliveryOptions,
                        delivery: e.target.checked
                      })}
                      style={{ accentColor: '#16a34a', transform: 'scale(1.2)' }}
                    />
                    <span style={{ fontSize: '16px' }}>üöó H√°zhozsz√°ll√≠t√°s (k√∂rny√©ken)</span>
                  </label>
                  <label style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '12px',
                    cursor: 'pointer'
                  }}>
                    <input
                      type="checkbox"
                      checked={deliveryOptions.shipping}
                      onChange={(e) => setDeliveryOptions({
                        ...deliveryOptions,
                        shipping: e.target.checked
                      })}
                      style={{ accentColor: '#16a34a', transform: 'scale(1.2)' }}
                    />
                    <span style={{ fontSize: '16px' }}>üì¶ Postai k√ºld√©s (tart√≥s term√©kek)</span>
                  </label>
                </div>
              </div>
            </div>
          )}
          
          {/* STEP 4: Publik√°l√°s */}
          {step === 4 && (
            <div>
              <h2 style={{
                fontSize: '24px',
                fontWeight: '600',
                color: '#1f2937',
                marginBottom: '24px'
              }}>
                Publik√°l√°s √©s √©rtes√≠t√©sek
              </h2>
              
              {/* Term√©k el≈ën√©zete */}
              <div style={{
                background: '#f8fafc',
                borderRadius: '16px',
                padding: '24px',
                marginBottom: '24px',
                border: '2px solid #e5e7eb'
              }}>
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  color: '#374151',
                  marginBottom: '16px'
                }}>
                  Term√©k el≈ën√©zete
                </h3>
                
                <div style={{
                  display: 'flex',
                  gap: '20px',
                  alignItems: 'flex-start'
                }}>
                  {/* Term√©k k√©pe/ikonja */}
                  <div style={{
                    width: '80px',
                    height: '80px',
                    background: 'linear-gradient(135deg, #f0fdf4, #dcfce7)',
                    borderRadius: '16px',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    fontSize: useImage === 'photo' && uploadedImages.length > 0 ? '0' : '32px',
                    backgroundImage: useImage === 'photo' && uploadedImages.length > 0 
                      ? `url(${URL.createObjectURL(uploadedImages[0])})` 
                      : 'none',
                    backgroundSize: 'cover',
                    backgroundPosition: 'center'
                  }}>
                    {useImage === 'emoji' && selectedEmoji}
                  </div>
                  
                  {/* Term√©k info */}
                  <div style={{ flex: 1 }}>
                    <h4 style={{
                      fontSize: '20px',
                      fontWeight: '600',
                      color: '#1f2937',
                      marginBottom: '8px'
                    }}>
                      {productName || 'Term√©k neve'}
                    </h4>
                    <div style={{
                      display: 'flex',
                      alignItems: 'center',
                      gap: '16px',
                      marginBottom: '8px'
                    }}>
                      <span style={{
                        fontSize: '18px',
                        fontWeight: '700',
                        color: '#16a34a'
                      }}>
                        {price ? `${price} Ft/${unit}` : '√År nincs megadva'}
                      </span>
                      {isOrganic && (
                        <span style={{
                          background: '#16a34a',
                          color: 'white',
                          padding: '2px 6px',
                          borderRadius: '6px',
                          fontSize: '12px',
                          fontWeight: '600'
                        }}>
                          üå± BIO
                        </span>
                      )}
                      {subcategory && (
                        <span style={{
                          background: '#f0fdf4',
                          color: '#16a34a',
                          padding: '2px 6px',
                          borderRadius: '6px',
                          fontSize: '12px',
                          fontWeight: '600'
                        }}>
                          {subcategory}
                        </span>
                      )}
                    </div>
                    <p style={{
                      fontSize: '14px',
                      color: '#6b7280',
                      margin: 0
                    }}>
                      {description || 'Nincs le√≠r√°s megadva'}
                    </p>
                  </div>
                </div>
              </div>
              
              {/* Push √©rtes√≠t√©s opci√≥ */}
              <div style={{
                background: sendPushNotification ? '#fef3c7' : '#f8fafc',
                borderRadius: '16px',
                padding: '20px',
                marginBottom: '24px',
                border: '2px solid #e5e7eb',
                borderColor: sendPushNotification ? '#fbbf24' : '#e5e7eb'
              }}>
                <label style={{
                  display: 'flex',
                  alignItems: 'flex-start',
                  gap: '12px',
                  cursor: 'pointer',
                  marginBottom: sendPushNotification ? '16px' : '0'
                }}>
                  <input
                    type="checkbox"
                    checked={sendPushNotification}
                    onChange={(e) => setSendPushNotification(e.target.checked)}
                    disabled={isLimitReached.monthlyPushes}
                    style={{ 
                      accentColor: '#16a34a', 
                      transform: 'scale(1.2)',
                      marginTop: '2px'
                    }}
                  />
                  <div>
                    <span style={{
                      fontSize: '16px',
                      fontWeight: '600',
                      color: isLimitReached.monthlyPushes ? '#9ca3af' : '#1f2937'
                    }}>
                      üì¢ Push √©rtes√≠t√©s k√ºld√©se (500 Ft)
                    </span>
                    <p style={{
                      fontSize: '14px',
                      color: '#6b7280',
                      margin: '4px 0 0 0'
                    }}>
                      {isLimitReached.monthlyPushes 
                        ? '‚ö†Ô∏è El√©rted a havi push √©rtes√≠t√©sek limitj√©t (3/h√≥)'
                        : '√ârtes√≠tsd a k√∂rny√©kbelieket az √∫j term√©kr≈ël'
                      }
                    </p>
                  </div>
                </label>
                
                {/* Push √©rtes√≠t√©s be√°ll√≠t√°sok */}
                {sendPushNotification && !isLimitReached.monthlyPushes && (
                  <div>
                    <label style={{
                      display: 'block',
                      fontSize: '14px',
                      fontWeight: '600',
                      color: '#374151',
                      marginBottom: '8px'
                    }}>
                      √ârtes√≠t√©s t√°vols√°ga: {pushRadius} km
                    </label>
                    <input
                      type="range"
                      min="5"
                      max="30"
                      value={pushRadius}
                      onChange={(e) => setPushRadius(parseInt(e.target.value))}
                      style={{
                        width: '100%',
                        accentColor: '#fbbf24'
                      }}
                    />
                    <div style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      fontSize: '12px',
                      color: '#6b7280',
                      marginTop: '4px'
                    }}>
                      <span>5 km</span>
                      <span>~{Math.round(pushRadius * pushRadius * 0.3)} potenci√°lis v√°s√°rl√≥</span>
                      <span>30 km</span>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
          
          {/* Navig√°ci√≥s gombok */}
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginTop: '32px',
            paddingTop: '24px',
            borderTop: '1px solid #e5e7eb'
          }}>
            {step > 1 ? (
              <button
                onClick={() => setStep(step - 1)}
                style={{
                  background: 'white',
                  border: '2px solid #e5e7eb',
                  borderRadius: '12px',
                  padding: '12px 24px',
                  fontSize: '16px',
                  fontWeight: '600',
                  cursor: 'pointer',
                  color: '#6b7280',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px'
                }}
              >
                ‚Üê Vissza
              </button>
            ) : (
              <div></div>
            )}
            
            {step < 4 ? (
              <button
                onClick={() => setStep(step + 1)}
                disabled={
                  (step === 1 && (!productName || !category || !description)) ||
                  (step === 2 && useImage === 'emoji' && !selectedEmoji) ||
                  (step === 3 && !price)
                }
                style={{
                  background: 'linear-gradient(135deg, #16a34a, #15803d)',
                  color: 'white',
                  border: 'none',
                  borderRadius: '12px',
                  padding: '12px 24px',
                  fontSize: '16px',
                  fontWeight: '600',
                  cursor: 'pointer',
                  opacity: (
                    (step === 1 && (!productName || !category || !description)) ||
                    (step === 2 && useImage === 'emoji' && !selectedEmoji) ||
                    (step === 3 && !price)
                  ) ? 0.5 : 1,
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px'
                }}
              >
                Tov√°bb ‚Üí
              </button>
            ) : (
              <button
                onClick={handleSubmit}
                disabled={isLimitReached.activeAds || isLimitReached.monthlyAds}
                style={{
                  background: isLimitReached.activeAds || isLimitReached.monthlyAds 
                    ? '#9ca3af' 
                    : 'linear-gradient(135deg, #16a34a, #15803d)',
                  color: 'white',
                  border: 'none',
                  borderRadius: '12px',
                  padding: '16px 32px',
                  fontSize: '18px',
                  fontWeight: '600',
                  cursor: isLimitReached.activeAds || isLimitReached.monthlyAds ? 'not-allowed' : 'pointer',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                  boxShadow: isLimitReached.activeAds || isLimitReached.monthlyAds 
                    ? 'none' 
                    : '0 8px 24px rgba(22, 163, 74, 0.3)'
                }}
              >
                üöÄ Term√©k publik√°l√°sa
                {sendPushNotification && !isLimitReached.monthlyPushes && ' (500 Ft)'}
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}